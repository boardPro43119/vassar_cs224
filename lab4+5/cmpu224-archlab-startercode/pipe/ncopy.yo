                            | #/* $begin ncopy-ys */
                            | ##################################################################
                            | # ncopy.ys - Copy a src block of len words to dst.
                            | # Return the number of positive words (>0) contained in src.
                            | #
                            | # Benjamin Prud'homme
                            | #
                            | # Describe how and why you modified the baseline code.
                            | # Replaced irmovq/addq with iaddq
                            | # Unrolled loop to copy 8 elements at a time
                            | # Implemented jump table to deal with remainder
                            | #
                            | ##################################################################
                            | # Do not modify this portion
                            | # Function prologue.
                            | # %rdi = src, %rsi = dst, %rdx = len
0x000:                      | ncopy:
                            | 
                            | ##################################################################
                            | # You can modify this portion
                            | 	# Loop header
0x000: 6300                 | 	xorq %rax,%rax		# count = 0;
0x002: 2021                 | 	rrmovq %rdx, %rcx
0x004: c0f1f8ffffffffffffff | 	iaddq $-8, %rcx		# len < 8?
0x00e: 729001000000000000   | 	jl Rem1			# if so, goto Rem1
                            | 
0x017: 50870000000000000000 | Copy:	mrmovq (%rdi), %r8
0x021: 50970800000000000000 | 	mrmovq 8(%rdi), %r9
0x02b: 50a71000000000000000 | 	mrmovq 16(%rdi), %r10
0x035: 50b71800000000000000 | 	mrmovq 24(%rdi), %r11
0x03f: 50c72000000000000000 | 	mrmovq 32(%rdi), %r12
0x049: 50d72800000000000000 | 	mrmovq 40(%rdi), %r13
0x053: 50e73000000000000000 | 	mrmovq 48(%rdi), %r14
0x05d: 50373800000000000000 | 	mrmovq 56(%rdi), %rbx
                            | 
0x067: 6288                 | Copy1:	andq %r8, %r8
0x069: 40860000000000000000 | 	rmmovq %r8, (%rsi)
0x073: 718600000000000000   | 	jle Copy2
0x07c: c0f00100000000000000 | 	iaddq $1, %rax
                            | 
0x086: 6299                 | Copy2:	andq %r9, %r9
0x088: 40960800000000000000 | 	rmmovq %r9, 8(%rsi)
0x092: 71a500000000000000   | 	jle Copy3
0x09b: c0f00100000000000000 | 	iaddq $1, %rax	
                            | 
0x0a5: 62aa                 | Copy3:	andq %r10, %r10
0x0a7: 40a61000000000000000 | 	rmmovq %r10, 16(%rsi)
0x0b1: 71c400000000000000   | 	jle Copy4
0x0ba: c0f00100000000000000 | 	iaddq $1, %rax
                            | 
0x0c4: 62bb                 | Copy4:	andq %r11, %r11
0x0c6: 40b61800000000000000 | 	rmmovq %r11, 24(%rsi)
0x0d0: 71e300000000000000   | 	jle Copy5
0x0d9: c0f00100000000000000 | 	iaddq $1, %rax
                            | 
0x0e3: 62cc                 | Copy5:	andq %r12, %r12
0x0e5: 40c62000000000000000 | 	rmmovq %r12, 32(%rsi)
0x0ef: 710201000000000000   | 	jle Copy6
0x0f8: c0f00100000000000000 | 	iaddq $1, %rax
                            | 
0x102: 62dd                 | Copy6:	andq %r13, %r13
0x104: 40d62800000000000000 | 	rmmovq %r13, 40(%rsi)
0x10e: 712101000000000000   | 	jle Copy7
0x117: c0f00100000000000000 | 	iaddq $1, %rax
                            | 
0x121: 62ee                 | Copy7:	andq %r14, %r14
0x123: 40e63000000000000000 | 	rmmovq %r14, 48(%rsi)
0x12d: 714001000000000000   | 	jle Copy8
0x136: c0f00100000000000000 | 	iaddq $1, %rax
                            | 
0x140: 6233                 | Copy8:	andq %rbx, %rbx
0x142: 40363800000000000000 | 	rmmovq %rbx, 56(%rsi)
0x14c: 715f01000000000000   | 	jle Npos
0x155: c0f00100000000000000 | 	iaddq $1, %rax
                            | 
0x15f: c0f74000000000000000 | Npos:	iaddq $64, %rdi		# 0x191 src++
0x169: c0f64000000000000000 | 	iaddq $64, %rsi		# 0x19b dst++
0x173: c0f2f8ffffffffffffff | 	iaddq $-8, %rdx		# 0x1a5 len--
0x17d: c0f1f8ffffffffffffff | 	iaddq $-8, %rcx		# 0x1af (len-8)--
0x187: 751700000000000000   | 	jge Copy		# 0x1b9 if len >= 8, goto Copy8 (continue loop):
                            | 
0x190: 6222                 | Rem1:	andq %rdx, %rdx		# 0x1c2
0x192: 50870000000000000000 | 	mrmovq (%rdi), %r8
0x19c: 714203000000000000   | 	jle Done
0x1a5: c0f2ffffffffffffffff | 	iaddq $-1, %rdx
0x1af: 6288                 | 	andq %r8, %r8	
0x1b1: 40860000000000000000 | 	rmmovq %r8, (%rsi)
0x1bb: 71ce01000000000000   | 	jle Rem2
0x1c4: c0f00100000000000000 | 	iaddq $1, %rax
                            | 
0x1ce: 6222                 | Rem2:	andq %rdx, %rdx		# 0x1c2
0x1d0: 50970800000000000000 | 	mrmovq 8(%rdi), %r9
0x1da: 714203000000000000   | 	jle Done
0x1e3: c0f2ffffffffffffffff | 	iaddq $-1, %rdx
0x1ed: 6299                 | 	andq %r9, %r9	
0x1ef: 40960800000000000000 | 	rmmovq %r9, 8(%rsi)
0x1f9: 710c02000000000000   | 	jle Rem3
0x202: c0f00100000000000000 | 	iaddq $1, %rax	
                            | 
0x20c: 6222                 | Rem3:	andq %rdx, %rdx		# 0x1c2
0x20e: 50a71000000000000000 | 	mrmovq 16(%rdi), %r10
0x218: 714203000000000000   | 	jle Done
0x221: c0f2ffffffffffffffff | 	iaddq $-1, %rdx
0x22b: 62aa                 | 	andq %r10, %r10
0x22d: 40a61000000000000000 | 	rmmovq %r10, 16(%rsi)
0x237: 714a02000000000000   | 	jle Rem4
0x240: c0f00100000000000000 | 	iaddq $1, %rax
                            | 
0x24a: 6222                 | Rem4:	andq %rdx, %rdx		# 0x1c2
0x24c: 50b71800000000000000 | 	mrmovq 24(%rdi), %r11
0x256: 714203000000000000   | 	jle Done
0x25f: c0f2ffffffffffffffff | 	iaddq $-1, %rdx
0x269: 62bb                 | 	andq %r11, %r11
0x26b: 40b61800000000000000 | 	rmmovq %r11, 24(%rsi)
0x275: 718802000000000000   | 	jle Rem5
0x27e: c0f00100000000000000 | 	iaddq $1, %rax
                            | 
0x288: 6222                 | Rem5:	andq %rdx, %rdx		# 0x1c2
0x28a: 50c72000000000000000 | 	mrmovq 32(%rdi), %r12
0x294: 714203000000000000   | 	jle Done
0x29d: c0f2ffffffffffffffff | 	iaddq $-1, %rdx
0x2a7: 62cc                 | 	andq %r12, %r12
0x2a9: 40c62000000000000000 | 	rmmovq %r12, 32(%rsi)
0x2b3: 71c602000000000000   | 	jle Rem6
0x2bc: c0f00100000000000000 | 	iaddq $1, %rax
                            | 
0x2c6: 6222                 | Rem6:	andq %rdx, %rdx		# 0x1c2
0x2c8: 50d72800000000000000 | 	mrmovq 40(%rdi), %r13
0x2d2: 714203000000000000   | 	jle Done
0x2db: c0f2ffffffffffffffff | 	iaddq $-1, %rdx
0x2e5: 62dd                 | 	andq %r13, %r13
0x2e7: 40d62800000000000000 | 	rmmovq %r13, 40(%rsi)
0x2f1: 710403000000000000   | 	jle Rem7
0x2fa: c0f00100000000000000 | 	iaddq $1, %rax
                            | 
0x304: 6222                 | Rem7:	andq %rdx, %rdx		# 0x1c2
0x306: 50e73000000000000000 | 	mrmovq 48(%rdi), %r14
0x310: 714203000000000000   | 	jle Done
0x319: c0f2ffffffffffffffff | 	iaddq $-1, %rdx
0x323: 62ee                 | 	andq %r14, %r14
0x325: 40e63000000000000000 | 	rmmovq %r14, 48(%rsi)
0x32f: 714203000000000000   | 	jle Done
0x338: c0f00100000000000000 | 	iaddq $1, %rax
                            | 
                            | ##################################################################
                            | # Do not modify the following section of code
                            | # Function epilogue.
0x342:                      | Done:
0x342: 90                   | 	ret			# 0x366
                            | ##################################################################
                            | 
                            | # Keep the following label at the end of your function
0x343:                      | End:
                            | #/* $end ncopy-ys */
